from solutions import p1, p2


class EulerProblem():
    def __init__(self, title, description, url, solution_method):
        self.title = title
        self.description = description
        self.url = url
        self.solution_method = solution_method

    def show_title(self):
        print(self.title)

    def show_description(self):
        print(self.description)

    def execute_solution(self):
        self.solution_method()


def euler_problem(title, description, url, solution_method):
    current_problem = EulerProblem(title, description, url, solution_method)
    current_problem.show_title()
    current_problem.show_description()
    current_problem.execute_solution()


def run():
    # euler_problem(
    #     'Multiples of 3 or 5',
    #     """If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.\nFind the sum of all the multiples of 3 or 5 below 1000.""",
    #     'https://projecteuler.net/problem=1',
    #     p1
    # )
    euler_problem(
        'Even Fibonacci numbers',
        """Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...\nBy considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.""",
        'https://projecteuler.net/problem=2',
        p2
    )


if __name__ == "__main__":
    run()
